//******************************************************************************
//The binary codes for instruction test
//Purpose: PUSH and POP
//
//******************************************************************************
//
@0000_0000  2000_03fc  //SP initial position;
@0000_0001  0000_0051  //reset vector; 
//
@0000_0014  2122_2011  //mov r1, #h22; mov r0, #h11; 
@0000_0015  2344_2233  //mov r3, #h44; mov r2, #h33;
@0000_0016  2566_2455  //mov r5, #h66; mov r4, #h55;
@0000_0017  2788_2677  //mov r7, #h88; mov r6, #h77;

@0000_0018  4148_b5ff  //adc r0, r1; push sp, r0-r7;
@0000_0019  0625_2420  //lsl r5,r4,#24; mov r4, #32;
@0000_001a  68aa_60ac  //ldr r2, r5, #2; str r4, r5, #2;

@0000_001b  21f1_20f0  //mov r1, #hf1; mov r0, #hf0; 
@0000_001c  23f3_22f2  //mov r3, #hf3; mov r2, #hf2;
@0000_001d  25f5_24f4  //mov r5, #hf5; mov r4, #hf4;
@0000_001e  27f7_26f6  //mov r7, #hf7; mov r6, #hf6;

@0000_001f  0625_2420  //lsl r5,r4,#24; mov r4, #32;
@0000_0020  bcff_c5cf  //pop r0-r7; STM R5,r0,1,2,3,6,7;

@0000_0021  0625_2420  //lsl r5,r4,#24; mov r4, #32;
@0000_0022  4148_cd33  //adc r0, r1; LDM r5, r0,r1,r4,r5;


@0000_0023  e7fe_4148  //b here; adc r0, r1; 

